@using ViewModel.Members

@inject IMemberService _memberService
<div class="col-md-4">
    <div>
        <h2>@Title</h2>
        @if (Members.Any())
        {
            <table style="width:100%;">
                @foreach (var item in Members)
                {
                    var fullname = $"{item.FirstName} {item.LastName}";
                    var userLink = $"/members/{item.Id}";
                    <tr style="border-bottom:solid 1px #ccc;">
                        <td><img src="/img/user.png" title="user image" style="width:35px;" alt="user image" /></td>
                        <td>
                            <NavLink href="@userLink">@item.NickName</NavLink>
                            <br />
                            @fullname
                        </td>
                        <td style="text-align:right;">
                            @if(Following)
                            {
                            if (item.Following)
                            {
                                <MatButton Class="btn btn-outline-danger" OnClick="@( async e => { await UnFollow(item.Id); })">UnFollow</MatButton>
                            }
                            }
                            else
                            {
                        

                            if (item.Following)
                            {
                                <MatButton Class="btn btn-outline-danger" OnClick="@( async e => { await UnFollow(item.Id); })">UnFollow</MatButton>
                            }
                            else
                            {
                                <MatButton Class="btn btn-outline-dark" OnClick="@( async e => { await Follow(item.Id); })">Follow</MatButton>
                            }
                       
                            }




                        </td>
                    </tr>
                }



            </table>
        }
        else
        {
            @((MarkupString)NoMemberText)
        }

    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string NoMemberText { get; set; }

    [Parameter]
    public List<FollowMemberViewModel> Members { get; set; }

    [Parameter]
    public bool Following { get; set; }

    protected async Task UnFollow(Guid userId)
    {

        await _memberService.UnFollow(userId);
        var member = Members.First(x => x.Id == userId);
        Members.Remove(member);
         await OnFollowChange.InvokeAsync(new MouseEventArgs());
    }

    protected async Task Follow(Guid userId)
    {

        await _memberService.Follow(userId);


         await OnFollowChange.InvokeAsync(new MouseEventArgs());
    }
    [Parameter]
    public EventCallback<MouseEventArgs> OnFollowChange { get; set; }

}
